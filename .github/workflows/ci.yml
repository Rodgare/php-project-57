name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3' # Используй версию PHP, которую ты используешь в проекте
        extensions: pgsql, pdo_pgsql, mbstring, dom, fileinfo, bcmath
        ini-values: post_max_size=256M, upload_max_filesize=256M
        tools: composer:v2

    - name: Get Composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
      
    - name: Install Node.js dependencies
      run: npm install

    - name: Build frontend assets
      run: npm run build
      
    - name: Copy .env.example
      run: cp .env.example .env

    - name: Generate app key
      run: php artisan key:generate

    - name: Configure database for testing
      run: |
        sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=sqlite/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=:memory:/' .env
        touch database/database.sqlite

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run Laravel Pint (Linting)
      run: ./vendor/bin/pint --test

    - name: Run PHPStan (Static Analysis/Linting)
      run: ./vendor/bin/phpstan analyse app

    - name: Run PHPUnit Tests
      run: php artisan test